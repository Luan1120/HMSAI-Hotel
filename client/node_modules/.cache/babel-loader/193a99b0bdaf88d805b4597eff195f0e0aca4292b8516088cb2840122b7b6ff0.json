{"ast":null,"code":"var _jsxFileName = \"D:\\\\DA_TichHop\\\\HMS_AI Hotel\\\\client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Auth.css';\nimport './UniverseBg.css';\nimport UniverseBg from './UniverseBg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const googleBtnRef = useRef(null);\n\n  // Initialize Google One Tap / button\n  useEffect(() => {\n    const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID || window.GOOGLE_CLIENT_ID;\n    if (!clientId) return; // not configured\n    const init = () => {\n      if (!window.google || !window.google.accounts || !googleBtnRef.current) return;\n      try {\n        window.google.accounts.id.initialize({\n          client_id: clientId,\n          callback: async response => {\n            if (!response || !response.credential) return;\n            setError('');\n            setMessage('Đang xác thực Google...');\n            try {\n              const r = await fetch('/api/auth/google', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  credential: response.credential\n                })\n              });\n              const data = await r.json();\n              if (!r.ok) throw new Error(data.message || 'Đăng nhập Google thất bại');\n              setMessage(data.message || 'Đăng nhập thành công');\n              if (data.user) {\n                try {\n                  localStorage.setItem('hmsUser', JSON.stringify(data.user));\n                  window.dispatchEvent(new Event('hms-auth-change'));\n                } catch {}\n              }\n              // redirect\n              navigate('/');\n            } catch (e) {\n              setError(e.message);\n              setMessage('');\n            }\n          },\n          auto_select: false,\n          cancel_on_tap_outside: true\n        });\n        window.google.accounts.id.renderButton(googleBtnRef.current, {\n          theme: 'outline',\n          size: 'large',\n          width: 320\n        });\n      } catch (e) {/* ignore */}\n    };\n    // Wait for script\n    if (window.google) init();else {\n      const id = setTimeout(init, 500);\n      return () => clearTimeout(id);\n    }\n  }, [navigate]);\n\n  // Helpers for per-email remembered passwords\n  const getCredMap = () => {\n    try {\n      const raw = localStorage.getItem('hmsCredMap');\n      return raw ? JSON.parse(raw) : {};\n    } catch {\n      return {};\n    }\n  };\n  const saveCredMap = map => {\n    try {\n      localStorage.setItem('hmsCredMap', JSON.stringify(map));\n    } catch {}\n  };\n\n  // One-time migration from old single-credential storage to map\n  useEffect(() => {\n    try {\n      const remember = localStorage.getItem('hmsRemember');\n      const credsRaw = localStorage.getItem('hmsCreds');\n      if (remember === '1' && credsRaw) {\n        const prev = JSON.parse(credsRaw);\n        const key = (prev.email || '').trim().toLowerCase();\n        if (key) {\n          const map = getCredMap();\n          map[key] = prev.password || '';\n          saveCredMap(map);\n        }\n      }\n      localStorage.removeItem('hmsRemember');\n      localStorage.removeItem('hmsCreds');\n    } catch {}\n  }, []);\n\n  // When email changes, auto-fill password if we have it saved for that email\n  const handleEmailChange = val => {\n    setEmail(val);\n    const key = (val || '').trim().toLowerCase();\n    const map = getCredMap();\n    if (key && Object.prototype.hasOwnProperty.call(map, key)) {\n      setPassword(map[key] || '');\n      setRememberMe(true);\n    } else {\n      // Clear password when switching to an email we don't recognize\n      setPassword('');\n      setRememberMe(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setMessage('');\n    try {\n      const res = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || 'Đăng nhập thất bại');\n      setMessage(data.message);\n      // Lưu thông tin người dùng để hiện tên ở user menu\n      if (data.user) {\n        try {\n          let user = data.user;\n          // If avatar missing, try to fetch profile for avatar enrichment\n          if (!user.avatar && user.email) {\n            try {\n              const res2 = await fetch(`/api/users/profile?email=${encodeURIComponent(user.email)}&_=${Date.now()}`);\n              if (res2.ok) {\n                const j2 = await res2.json();\n                if (j2 && j2.user && j2.user.avatar) user = {\n                  ...user,\n                  avatar: j2.user.avatar\n                };\n              }\n            } catch {}\n          }\n          localStorage.setItem('hmsUser', JSON.stringify(user));\n          // Thông báo cho các component khác (cùng tab) cập nhật\n          window.dispatchEvent(new Event('hms-auth-change'));\n        } catch {}\n      }\n      // Xử lý Nhớ mật khẩu theo email: chỉ lưu/ghi đè khi được tick\n      try {\n        const key = (email || '').trim().toLowerCase();\n        if (key) {\n          const map = getCredMap();\n          if (rememberMe) map[key] = password; // không xóa nếu unchecked\n          saveCredMap(map);\n        }\n      } catch {}\n      // Xóa dữ liệu trong input sau khi đăng nhập thành công\n      setEmail('');\n      setPassword('');\n      // Chuyển tới trang HomePage\n      navigate('/');\n      try {\n        setTimeout(() => window.scrollTo(0, 0), 0);\n      } catch {}\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      minHeight: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(UniverseBg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        zIndex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake-border-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake-border-bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0110\\u0102NG NH\\u1EACP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9 email\",\n            value: email,\n            onChange: e => handleEmailChange(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"M\\u1EADt kh\\u1EA9u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? 'text' : 'password',\n              placeholder: \"M\\u1EADt kh\\u1EA9u\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"toggle-password\",\n              onClick: () => setShowPassword(!showPassword),\n              children: showPassword ? 'Ẩn' : 'Hiện'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-remember\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"rememberMe\",\n              type: \"checkbox\",\n              checked: rememberMe,\n              onChange: e => setRememberMe(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rememberMe\",\n              className: \"auth-remember-label\",\n              children: \"Nh\\u1EDB m\\u1EADt kh\\u1EA9u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            type: \"submit\",\n            children: \"Ti\\u1EBFp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-msg\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"or\",\n          children: \"ho\\u1EB7c ti\\u1EBFp t\\u1EE5c v\\u1EDBi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: googleBtnRef,\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), !process.env.REACT_APP_GOOGLE_CLIENT_ID && !window.GOOGLE_CLIENT_ID && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#888',\n            textAlign: 'center',\n            marginBottom: '8px'\n          },\n          children: \"(Ch\\u01B0a c\\u1EA5u h\\xECnh Google Client ID - th\\xEAm REACT_APP_GOOGLE_CLIENT_ID v\\xE0o .env)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-links\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"auth-link\",\n            to: \"/forgot-password\",\n            children: \"B\\u1EA1n qu\\xEAn m\\u1EADt kh\\u1EA9u?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"auth-link\",\n            to: \"/register\",\n            children: \"\\u0110\\u0103ng k\\xFD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"UTdv6F3gKpIv1NQJS4QBmhDwmvs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Link","useNavigate","UniverseBg","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","rememberMe","setRememberMe","showPassword","setShowPassword","message","setMessage","error","setError","googleBtnRef","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","window","GOOGLE_CLIENT_ID","init","google","accounts","current","id","initialize","client_id","callback","response","credential","r","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","user","localStorage","setItem","dispatchEvent","Event","e","auto_select","cancel_on_tap_outside","renderButton","theme","size","width","setTimeout","clearTimeout","getCredMap","raw","getItem","parse","saveCredMap","map","remember","credsRaw","prev","key","trim","toLowerCase","removeItem","handleEmailChange","val","Object","prototype","hasOwnProperty","call","handleSubmit","preventDefault","res","avatar","res2","encodeURIComponent","Date","now","j2","scrollTo","err","style","position","minHeight","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","zIndex","className","onSubmit","type","placeholder","value","onChange","target","required","onClick","checked","htmlFor","ref","display","justifyContent","marginBottom","fontSize","color","textAlign","to","_c","$RefreshReg$"],"sources":["D:/DA_TichHop/HMS_AI Hotel/client/src/Login.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Auth.css';\r\nimport './UniverseBg.css';\r\nimport UniverseBg from './UniverseBg';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const googleBtnRef = useRef(null);\r\n\r\n  // Initialize Google One Tap / button\r\n  useEffect(() => {\r\n    const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID || window.GOOGLE_CLIENT_ID;\r\n    if (!clientId) return; // not configured\r\n    const init = () => {\r\n      if (!window.google || !window.google.accounts || !googleBtnRef.current) return;\r\n      try {\r\n        window.google.accounts.id.initialize({\r\n          client_id: clientId,\r\n          callback: async (response) => {\r\n            if (!response || !response.credential) return;\r\n            setError('');\r\n            setMessage('Đang xác thực Google...');\r\n            try {\r\n              const r = await fetch('/api/auth/google', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ credential: response.credential })\r\n              });\r\n              const data = await r.json();\r\n              if (!r.ok) throw new Error(data.message || 'Đăng nhập Google thất bại');\r\n              setMessage(data.message || 'Đăng nhập thành công');\r\n              if (data.user) {\r\n                try {\r\n                  localStorage.setItem('hmsUser', JSON.stringify(data.user));\r\n                  window.dispatchEvent(new Event('hms-auth-change'));\r\n                } catch {}\r\n              }\r\n              // redirect\r\n              navigate('/');\r\n            } catch (e) {\r\n              setError(e.message);\r\n              setMessage('');\r\n            }\r\n          },\r\n          auto_select: false,\r\n          cancel_on_tap_outside: true\r\n        });\r\n        window.google.accounts.id.renderButton(googleBtnRef.current, { theme: 'outline', size: 'large', width: 320 });\r\n      } catch (e) { /* ignore */ }\r\n    };\r\n    // Wait for script\r\n    if (window.google) init();\r\n    else {\r\n      const id = setTimeout(init, 500);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Helpers for per-email remembered passwords\r\n  const getCredMap = () => {\r\n    try {\r\n      const raw = localStorage.getItem('hmsCredMap');\r\n      return raw ? JSON.parse(raw) : {};\r\n    } catch {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const saveCredMap = (map) => {\r\n    try {\r\n      localStorage.setItem('hmsCredMap', JSON.stringify(map));\r\n    } catch {}\r\n  };\r\n\r\n  // One-time migration from old single-credential storage to map\r\n  useEffect(() => {\r\n    try {\r\n      const remember = localStorage.getItem('hmsRemember');\r\n      const credsRaw = localStorage.getItem('hmsCreds');\r\n      if (remember === '1' && credsRaw) {\r\n        const prev = JSON.parse(credsRaw);\r\n        const key = (prev.email || '').trim().toLowerCase();\r\n        if (key) {\r\n          const map = getCredMap();\r\n          map[key] = prev.password || '';\r\n          saveCredMap(map);\r\n        }\r\n      }\r\n      localStorage.removeItem('hmsRemember');\r\n      localStorage.removeItem('hmsCreds');\r\n    } catch {}\r\n  }, []);\r\n\r\n  // When email changes, auto-fill password if we have it saved for that email\r\n  const handleEmailChange = (val) => {\r\n    setEmail(val);\r\n    const key = (val || '').trim().toLowerCase();\r\n    const map = getCredMap();\r\n    if (key && Object.prototype.hasOwnProperty.call(map, key)) {\r\n      setPassword(map[key] || '');\r\n      setRememberMe(true);\r\n    } else {\r\n      // Clear password when switching to an email we don't recognize\r\n      setPassword('');\r\n      setRememberMe(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setMessage('');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || 'Đăng nhập thất bại');\r\n      setMessage(data.message);\r\n      // Lưu thông tin người dùng để hiện tên ở user menu\r\n      if (data.user) {\r\n        try {\r\n          let user = data.user;\r\n          // If avatar missing, try to fetch profile for avatar enrichment\r\n          if (!user.avatar && user.email) {\r\n            try {\r\n              const res2 = await fetch(`/api/users/profile?email=${encodeURIComponent(user.email)}&_=${Date.now()}`);\r\n              if (res2.ok) {\r\n                const j2 = await res2.json();\r\n                if (j2 && j2.user && j2.user.avatar) user = { ...user, avatar: j2.user.avatar };\r\n              }\r\n            } catch {}\r\n          }\r\n          localStorage.setItem('hmsUser', JSON.stringify(user));\r\n          // Thông báo cho các component khác (cùng tab) cập nhật\r\n          window.dispatchEvent(new Event('hms-auth-change'));\r\n        } catch {}\r\n      }\r\n      // Xử lý Nhớ mật khẩu theo email: chỉ lưu/ghi đè khi được tick\r\n      try {\r\n        const key = (email || '').trim().toLowerCase();\r\n        if (key) {\r\n          const map = getCredMap();\r\n          if (rememberMe) map[key] = password; // không xóa nếu unchecked\r\n          saveCredMap(map);\r\n        }\r\n      } catch {}\r\n      // Xóa dữ liệu trong input sau khi đăng nhập thành công\r\n      setEmail('');\r\n      setPassword('');\r\n      // Chuyển tới trang HomePage\r\n      navigate('/');\r\n      try { setTimeout(() => window.scrollTo(0, 0), 0); } catch {}\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{position:'relative', minHeight:'100vh', overflow:'hidden'}}>\r\n      <UniverseBg />\r\n      <div style={{position:'relative', zIndex:1}}>\r\n        <div className=\"auth-container\">\r\n          <div className=\"snake-border-top\"></div>\r\n          <div className=\"snake-border-bottom\"></div>\r\n          <h2>ĐĂNG NHẬP</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>Email</label>\r\n            <input type=\"email\" placeholder=\"Nhập địa chỉ email\" value={email} onChange={e => handleEmailChange(e.target.value)} required />\r\n            <label>Mật khẩu</label>\r\n            <div className=\"password-field\">\r\n              <input type={showPassword ? 'text' : 'password'} placeholder=\"Mật khẩu\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n              <span className=\"toggle-password\" onClick={() => setShowPassword(!showPassword)}>\r\n                {showPassword ? 'Ẩn' : 'Hiện'}\r\n              </span>\r\n            </div>\r\n            <div className=\"auth-remember\">\r\n              <input\r\n                id=\"rememberMe\"\r\n                type=\"checkbox\"\r\n                checked={rememberMe}\r\n                onChange={(e) => setRememberMe(e.target.checked)}\r\n              />\r\n              <label htmlFor=\"rememberMe\" className=\"auth-remember-label\">Nhớ mật khẩu</label>\r\n            </div>\r\n            <button className=\"btn-primary\" type=\"submit\">Tiếp</button>\r\n          </form>\r\n          {error && <div className=\"error-msg\">{error}</div>}\r\n          {message && <div className=\"success-msg\">{message}</div>}\r\n          <div className=\"or\">hoặc tiếp tục với</div>\r\n          <div ref={googleBtnRef} style={{ display: 'flex', justifyContent: 'center', marginBottom: '12px' }} />\r\n          {!process.env.REACT_APP_GOOGLE_CLIENT_ID && !window.GOOGLE_CLIENT_ID && (\r\n            <div style={{fontSize:'12px',color:'#888',textAlign:'center',marginBottom:'8px'}}>\r\n              (Chưa cấu hình Google Client ID - thêm REACT_APP_GOOGLE_CLIENT_ID vào .env)\r\n            </div>\r\n          )}\r\n          <div className=\"auth-links\">\r\n            <Link className=\"auth-link\" to=\"/forgot-password\">Bạn quên mật khẩu?</Link>\r\n            <Link className=\"auth-link\" to=\"/register\">Đăng ký</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}