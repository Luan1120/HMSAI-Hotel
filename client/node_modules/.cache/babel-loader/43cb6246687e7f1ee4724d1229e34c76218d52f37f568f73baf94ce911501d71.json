{"ast":null,"code":"// Tiện ích dùng chung cho thông báo (tách để tái sử dụng)\nexport function mapNotifTitle(it) {\n  if (!it) return 'Thông báo';\n  switch (it.type) {\n    case 'BookingPending':\n      return 'Yêu cầu đặt phòng đã gửi thành công';\n    case 'BookingConfirmed':\n      return 'Đặt phòng đã xác nhận';\n    case 'BookingCancelled':\n      return 'Đặt phòng đã bị hủy';\n    default:\n      return it.title || 'Thông báo';\n  }\n}\nexport function formatNotifTime(dt) {\n  try {\n    const d = new Date(dt);\n    if (isNaN(d)) return '';\n    const now = Date.now();\n    const diff = (now - d.getTime()) / 1000;\n    if (diff < 60) return 'Vừa xong';\n    if (diff < 3600) return Math.floor(diff / 60) + ' phút trước';\n    if (diff < 86400) return Math.floor(diff / 3600) + ' giờ trước';\n    const dd = String(d.getDate()).padStart(2, '0');\n    const mm = String(d.getMonth() + 1).padStart(2, '0');\n    const yyyy = d.getFullYear();\n    const hh = String(d.getHours()).padStart(2, '0');\n    const mi = String(d.getMinutes()).padStart(2, '0');\n    return `${dd}/${mm}/${yyyy} ${hh}:${mi}`;\n  } catch {\n    return '';\n  }\n}","map":{"version":3,"names":["mapNotifTitle","it","type","title","formatNotifTime","dt","d","Date","isNaN","now","diff","getTime","Math","floor","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hh","getHours","mi","getMinutes"],"sources":["D:/DA_TichHop/HMS_AI Hotel/client/src/notificationsUtil.js"],"sourcesContent":["// Tiện ích dùng chung cho thông báo (tách để tái sử dụng)\r\nexport function mapNotifTitle(it){\r\n  if(!it) return 'Thông báo';\r\n  switch(it.type){\r\n     case 'BookingPending': return 'Yêu cầu đặt phòng đã gửi thành công';\r\n    case 'BookingConfirmed': return 'Đặt phòng đã xác nhận';\r\n    case 'BookingCancelled': return 'Đặt phòng đã bị hủy';\r\n    default: return it.title || 'Thông báo';\r\n  }\r\n}\r\n\r\nexport function formatNotifTime(dt){\r\n  try {\r\n    const d = new Date(dt);\r\n    if(isNaN(d)) return '';\r\n    const now = Date.now();\r\n    const diff = (now - d.getTime())/1000;\r\n    if(diff < 60) return 'Vừa xong';\r\n    if(diff < 3600) return Math.floor(diff/60)+ ' phút trước';\r\n    if(diff < 86400) return Math.floor(diff/3600)+ ' giờ trước';\r\n    const dd = String(d.getDate()).padStart(2,'0');\r\n    const mm = String(d.getMonth()+1).padStart(2,'0');\r\n    const yyyy = d.getFullYear();\r\n    const hh = String(d.getHours()).padStart(2,'0');\r\n    const mi = String(d.getMinutes()).padStart(2,'0');\r\n    return `${dd}/${mm}/${yyyy} ${hh}:${mi}`;\r\n  } catch { return ''; }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,SAASA,aAAaA,CAACC,EAAE,EAAC;EAC/B,IAAG,CAACA,EAAE,EAAE,OAAO,WAAW;EAC1B,QAAOA,EAAE,CAACC,IAAI;IACX,KAAK,gBAAgB;MAAE,OAAO,qCAAqC;IACpE,KAAK,kBAAkB;MAAE,OAAO,uBAAuB;IACvD,KAAK,kBAAkB;MAAE,OAAO,qBAAqB;IACrD;MAAS,OAAOD,EAAE,CAACE,KAAK,IAAI,WAAW;EACzC;AACF;AAEA,OAAO,SAASC,eAAeA,CAACC,EAAE,EAAC;EACjC,IAAI;IACF,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,EAAE,CAAC;IACtB,IAAGG,KAAK,CAACF,CAAC,CAAC,EAAE,OAAO,EAAE;IACtB,MAAMG,GAAG,GAAGF,IAAI,CAACE,GAAG,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAG,CAACD,GAAG,GAAGH,CAAC,CAACK,OAAO,CAAC,CAAC,IAAE,IAAI;IACrC,IAAGD,IAAI,GAAG,EAAE,EAAE,OAAO,UAAU;IAC/B,IAAGA,IAAI,GAAG,IAAI,EAAE,OAAOE,IAAI,CAACC,KAAK,CAACH,IAAI,GAAC,EAAE,CAAC,GAAE,aAAa;IACzD,IAAGA,IAAI,GAAG,KAAK,EAAE,OAAOE,IAAI,CAACC,KAAK,CAACH,IAAI,GAAC,IAAI,CAAC,GAAE,YAAY;IAC3D,MAAMI,EAAE,GAAGC,MAAM,CAACT,CAAC,CAACU,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAC9C,MAAMC,EAAE,GAAGH,MAAM,CAACT,CAAC,CAACa,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IACjD,MAAMG,IAAI,GAAGd,CAAC,CAACe,WAAW,CAAC,CAAC;IAC5B,MAAMC,EAAE,GAAGP,MAAM,CAACT,CAAC,CAACiB,QAAQ,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAC/C,MAAMO,EAAE,GAAGT,MAAM,CAACT,CAAC,CAACmB,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IACjD,OAAO,GAAGH,EAAE,IAAII,EAAE,IAAIE,IAAI,IAAIE,EAAE,IAAIE,EAAE,EAAE;EAC1C,CAAC,CAAC,MAAM;IAAE,OAAO,EAAE;EAAE;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}